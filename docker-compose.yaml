version: '3'

services:
  nodejs:
    build:
      context: .
      dockerfile: Dockerfile
    image: devcamper-dev-image
    container_name: devcamper-dev-container
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=db
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
      - NODE_ENV=$NODE_ENV
      - PORT=$NODEPORT
      - GEOCODER_PROVIDER=$GEOCODER_PROVIDER
      - GEOCODER_API_KEY=$GEOCODER_API_KEY
      - FILE_UPLOAD_PATH=$FILE_UPLOAD_PATH
      - MAX_FILE_UPLOAD=$MAX_FILE_UPLOAD
      - JWT_SECRET=$JWT_SECRET
      - JWT_EXPIRE=$JWT_EXPIRE
      - JWT_COOKIE_EXPIRE=$JWT_COOKIE_EXPIRE
      - SMTP_HOST=$SMTP_HOST
      - SMTP_PORT=$SMTP_PORT
      - SMTP_EMAIL=$SMTP_EMAIL
      - SMTP_PASSWORD=$SMTP_PASSWORD
      - FROM_EMAIL=$FROM_EMAIL
      - FROM_NAME=$FROM_NAME
    ports:
      - "5000:5000"
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules
    networks:
      - app-dev-network
    command: ./wait-for.sh db:27017 -- /home/node/app/node_modules/.bin/nodemon server.js

  db-dev:
    image: mongo:4.1.8-xenial
    container_name: db
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    ports:
      - "27017:27017"
    volumes:
      - dbdata:/data/db
    networks:
      - app-dev-network

networks:
  app-dev-network:
    driver: bridge

volumes:
  dbdata:
  node_modules: